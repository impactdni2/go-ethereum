// Code generated by capnpc-go. DO NOT EDIT.

package rpc

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

type GetStorageAtReq capnp.Struct

// GetStorageAtReq_TypeID is the unique identifier for the type GetStorageAtReq.
const GetStorageAtReq_TypeID = 0xb6c128dcab696592

func NewGetStorageAtReq(s *capnp.Segment) (GetStorageAtReq, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return GetStorageAtReq(st), err
}

func NewRootGetStorageAtReq(s *capnp.Segment) (GetStorageAtReq, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return GetStorageAtReq(st), err
}

func ReadRootGetStorageAtReq(msg *capnp.Message) (GetStorageAtReq, error) {
	root, err := msg.Root()
	return GetStorageAtReq(root.Struct()), err
}

func (s GetStorageAtReq) String() string {
	str, _ := text.Marshal(0xb6c128dcab696592, capnp.Struct(s))
	return str
}

func (s GetStorageAtReq) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (GetStorageAtReq) DecodeFromPtr(p capnp.Ptr) GetStorageAtReq {
	return GetStorageAtReq(capnp.Struct{}.DecodeFromPtr(p))
}

func (s GetStorageAtReq) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s GetStorageAtReq) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s GetStorageAtReq) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s GetStorageAtReq) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s GetStorageAtReq) Block() uint64 {
	return capnp.Struct(s).Uint64(0)
}

func (s GetStorageAtReq) SetBlock(v uint64) {
	capnp.Struct(s).SetUint64(0, v)
}

func (s GetStorageAtReq) Address() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return []byte(p.Data()), err
}

func (s GetStorageAtReq) HasAddress() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s GetStorageAtReq) SetAddress(v []byte) error {
	return capnp.Struct(s).SetData(0, v)
}

func (s GetStorageAtReq) Slot() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(1)
	return []byte(p.Data()), err
}

func (s GetStorageAtReq) HasSlot() bool {
	return capnp.Struct(s).HasPtr(1)
}

func (s GetStorageAtReq) SetSlot(v []byte) error {
	return capnp.Struct(s).SetData(1, v)
}

// GetStorageAtReq_List is a list of GetStorageAtReq.
type GetStorageAtReq_List = capnp.StructList[GetStorageAtReq]

// NewGetStorageAtReq creates a new list of GetStorageAtReq.
func NewGetStorageAtReq_List(s *capnp.Segment, sz int32) (GetStorageAtReq_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return capnp.StructList[GetStorageAtReq](l), err
}

// GetStorageAtReq_Future is a wrapper for a GetStorageAtReq promised by a client call.
type GetStorageAtReq_Future struct{ *capnp.Future }

func (f GetStorageAtReq_Future) Struct() (GetStorageAtReq, error) {
	p, err := f.Future.Ptr()
	return GetStorageAtReq(p.Struct()), err
}

const schema_ae3aed875bda8d17 = "x\xda4\xc8\xbd.\x04Q\x18\x06\xe0\xf7\xfd\xce\xac\xcd" +
	"&&\xcc\xee&\x1a\xa2E\x82\xa0\xdbj\xfd\x05\x09\xc9" +
	"~\xe8Tc\xe6D\xc4p\x8e3\xa7Q)\xa7\xd2\xb8" +
	"\x0d\x09\x9d\xdem\x88[p\x0d#\x8a-\x9fg\xbe\x19" +
	"'[\xa9\x13\x88.vf\xdaW{\xfb\xf6\xb3\xf2\xf5" +
	"\x09\xed\x93\xed\xc2\xcb\xf7U\xf3;zGG\xba\xc0\xce" +
	"\x12\xfb\x1c\xac\xb3\x0b\x0cV\xf9\x81\xfd6\xf8b\xf3\xfe" +
	"\xc9\x07\xe3\xa2\xdb(r\xff\xe0GG6^D\x17\xf2" +
	"\x1b\xbb\x1b\xcf-\x1f'\xa4\xce\x9a\x04H\x08d\x87\xdb" +
	"\x80\x8e\x0d\xf5TH\x0e\xf9\x7f'{\x80\x1e\x18\xeaD" +
	"\x98\x09\x87\x14 ;[\x03\xf4\xd8P/\x85\xcb\xd7\x95" +
	"+\xee\xd8\x83\xb0\x07>\xe7e\x19l]3\x850\x05" +
	"\xe7\xea\xca\xc5)\xfe\x02\x00\x00\xff\xffE\xd1*\xff"

func RegisterSchema(reg *schemas.Registry) {
	reg.Register(&schemas.Schema{
		String: schema_ae3aed875bda8d17,
		Nodes: []uint64{
			0xb6c128dcab696592,
		},
		Compressed: true,
	})
}
